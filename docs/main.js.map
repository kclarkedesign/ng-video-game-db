{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/interceptors/http-errors.interceptors.ts","./src/app/services/http.service.ts","./src/app/components/details/details.component.html","./src/app/components/details/details.component.ts","./src/app/components/game-tabs/game-tabs.component.html","./src/app/components/game-tabs/game-tabs.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/interceptors/http-headers.interceptors.ts","./src/app/app.module.ts","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/search-bar/search-bar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  BASE_URL: 'https://rawg-video-games-database.p.rapidapi.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"filters\">\n  <mat-form-field>\n    <mat-label>Sort</mat-label>\n    <mat-select\n      panelClass=\"sort-select\"\n      [(ngModel)]=\"sort\"\n      (selectionChange)=\"searchGames(sort)\"\n    >\n      <mat-option value=\"name\">Name</mat-option>\n      <mat-option value=\"-released\">Released</mat-option>\n      <mat-option value=\"-added\">Added</mat-option>\n      <mat-option value=\"-created\">Created</mat-option>\n      <mat-option value=\"-updated\">Updated</mat-option>\n      <mat-option value=\"-rating\">Rating</mat-option>\n      <mat-option value=\"metacritic\">Metacritic</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<div class=\"games\">\n  <ng-container *ngFor=\"let game of games\">\n    <div class=\"game\" (click)=\"openGameDetails(game.id)\">\n      <div class=\"game-thumb-container\">\n        <img\n          *ngIf=\"game.background_image\"\n          src=\"{{ game.background_image }}\"\n          alt=\"thumbnail\"\n          class=\"game-thumbnail\"\n        />\n        <p *ngIf=\"!game.background_image\">No image</p>\n      </div>\n      <div class=\"game-description\">\n        <p class=\"game-name\">{{ game.name }}</p>\n        <div class=\"game-platforms\">\n          <img\n            *ngFor=\"let gamePlatform of game.parent_platforms\"\n            class=\"game-platform\"\n            src=\"assets/images/platforms/{{ gamePlatform.platform.slug }}.svg\"\n            alt=\"{{ gamePlatform.platform.slug }}}\"\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { APIResponse, Game } from 'src/app/models';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  public sort: string;\n  public games: Array<Game>;\n  private routeSub: Subscription;\n  private gameSub: Subscription;\n\n  constructor(\n    private httpService: HttpService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params: Params) => {\n      if (params['game-search']) {\n        this.searchGames('metacrit', params['game-search']);\n      } else {\n        this.searchGames('metacrit');\n      }\n    });\n  }\n\n  searchGames(sort: string, search?: string): void {\n    this.httpService\n      .getGameList(sort, search)\n      .subscribe((gameList: APIResponse<Game>) => {\n        this.games = gameList.results;\n        console.log(gameList);\n      });\n  }\n\n  openGameDetails(id: string): void {\n    this.router.navigate(['details', id]);\n  }\n\n  ngOnDestroy(): void {\n    if (this.gameSub) {\n      this.gameSub.unsubscribe();\n    }\n\n    if (this.routeSub) {\n      this.routeSub.unsubscribe();\n    }\n  }\n}\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError as observableThrowError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HttpErrorsInterceptor implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((err) => {\r\n        console.log(err);\r\n        return observableThrowError(err);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment as env } from 'src/environments/environment';\nimport { forkJoin, Observable } from 'rxjs';\nimport { APIResponse, Game } from '../models';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpService {\n  constructor(private http: HttpClient) {}\n\n  getGameList(\n    ordering: string,\n    search?: string\n  ): Observable<APIResponse<Game>> {\n    let params = new HttpParams().set('ordering', ordering);\n\n    if (search) {\n      params = new HttpParams().set('ordering', ordering).set('search', search);\n    }\n\n    return this.http.get<APIResponse<Game>>(`${env.BASE_URL}/games`, {\n      params: params,\n    });\n  }\n\n  getGameDetails(id: string): Observable<Game> {\n    const gameInfoRequest = this.http.get(`${env.BASE_URL}/games/${id}`);\n    const gameTrailersRequest = this.http.get(\n      `${env.BASE_URL}/games/${id}/movies`\n    );\n    const gameScreenshotsRequest = this.http.get(\n      `${env.BASE_URL}/games/${id}/screenshots`\n    );\n\n    return forkJoin({\n      gameInfoRequest,\n      gameScreenshotsRequest,\n      gameTrailersRequest,\n    }).pipe(\n      map((resp: any) => {\n        return {\n          ...resp['gameInfoRequest'],\n          screenshots: resp['gameScreenshotsRequest']?.results,\n          trailers: resp['gameTrailersRequest']?.results,\n        };\n      })\n    );\n  }\n}\n","<div class=\"details\" *ngIf=\"game\">\n  <div class=\"game-banner\">\n    <img\n      src=\"{{ game.background_image }}\"\n      alt=\"background image\"\n      class=\"game-banner-img\"\n    />\n  </div>\n  <div class=\"game-content\">\n    <div class=\"details-wrapper\">\n      <div class=\"game-header\">\n        <h1 class=\"game-header-title\">{{ game.name }}</h1>\n        <h2 class=\"game-header-release-date\">\n          Release: {{ game.released | date }}\n        </h2>\n        <p class=\"game-header-genres\">\n          <span *ngFor=\"let genre of game.genres; let last = last\">\n            {{ genre.name }}<span *ngIf=\"!last\">,</span>\n          </span>\n        </p>\n        <div class=\"game-gauge\">\n          <mwl-gauge\n            class=\"two\"\n            [max]=\"100\"\n            [dialStartAngle]=\"180\"\n            [dialEndAngle]=\"0\"\n            [value]=\"gameRating\"\n            [animated]=\"true\"\n            [color]=\"getColor\"\n            [animationDuration]=\"2\"\n          >\n          </mwl-gauge>\n          <a\n            *ngIf=\"game.metacritic_url?.length\"\n            class=\"game-gauge-label\"\n            target=\"_blank\"\n            href=\"{{ game.metacritic_url }}\"\n            >Metacritic\n          </a>\n          <span class=\"game-gauge-label\" *ngIf=\"!game.metacritic_url?.length\">\n            No Metacritic link\n          </span>\n        </div>\n      </div>\n      <app-game-tabs [game]=\"game\"></app-game-tabs>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Game } from 'src/app/models';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss'],\n})\nexport class DetailsComponent implements OnInit, OnDestroy {\n  gameRating = 0;\n  gameId: string;\n  game: Game;\n  routeSub: Subscription;\n  gameSub: Subscription;\n\n  constructor(\n    private ActivatedRoute: ActivatedRoute,\n    private httpService: HttpService\n  ) {}\n\n  ngOnInit(): void {\n    this.routeSub = this.ActivatedRoute.params.subscribe((params: Params) => {\n      this.gameId = params['id'];\n      this.getGameDetails(this.gameId);\n    });\n  }\n\n  getGameDetails(id: string): void {\n    this.gameSub = this.httpService\n      .getGameDetails(id)\n      .subscribe((gameResp: Game) => {\n        this.game = gameResp;\n\n        setTimeout(() => {\n          this.gameRating = this.game.metacritic;\n        }, 1000);\n      });\n  }\n\n  getColor(value: number): string {\n    if (value > 75) {\n      return '#5ee432';\n    } else if (value > 50) {\n      return '#fffa50';\n    } else if (value > 30) {\n      return '#f7aa38';\n    } else {\n      return '#ef4655';\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.gameSub) {\n      this.gameSub.unsubscribe();\n    }\n\n    if (this.routeSub) {\n      this.routeSub.unsubscribe();\n    }\n  }\n}\n","<div *ngIf=\"game\" class=\"game-tabs\">\n  <mat-tab-group mat-align-tabs=\"start\" backgroundColor=\"primary\">\n    <mat-tab label=\"About\">\n      <p *ngIf=\"game.parent_platforms?.length\" class=\"game-tabs-par\">\n        Platforms:\n        <span *ngFor=\"let game of game.parent_platforms; let last = last\">\n          {{ game.platform.name }}<span *ngIf=\"!last\">,</span>\n        </span>\n      </p>\n      <p *ngIf=\"game.publishers?.length\" class=\"game-tabs-par\">\n        Publishers:\n        <span *ngFor=\"let publisher of game.publishers; let last = last\">\n          {{ publisher.name }}<span *ngIf=\"!last\">,</span>\n        </span>\n      </p>\n      <p *ngIf=\"game.website\" class=\"game-tabs-par\">\n        Website:\n        <a href=\"{{ game.website }}\" class=\"game-tabs-link\" target=\"_blank\">{{\n          game.website\n        }}</a>\n      </p>\n      <div\n        *ngIf=\"game.description\"\n        class=\"game-description\"\n        [innerHTML]=\"game.description\"\n      ></div>\n      <p class=\"game-tabs-votes\">\n        <ng-container *ngFor=\"let rating of game.ratings\">\n          <span *ngIf=\"rating.title === 'exceptional'\">\n            <mat-icon class=\"game-votes-up\">thumb_up</mat-icon>\n            <span class=\"game-votes-count\">{{ rating.count || 0 }}</span>\n          </span>\n          <span *ngIf=\"rating.title === 'skip'\">\n            <mat-icon class=\"game-votes-down\">thumb_down</mat-icon>\n            <span class=\"game-votes-count\">{{ rating.count || 0 }}</span>\n          </span>\n        </ng-container>\n      </p>\n    </mat-tab>\n    <mat-tab label=\"Screenshots\" *ngIf=\"game.screenshots?.length\">\n      <div class=\"game-tabs-screenshots\">\n        <img\n          class=\"game-screenshot\"\n          *ngFor=\"let screenshot of game.screenshots; let i = index\"\n          src=\"{{ screenshot.image }}\"\n          alt=\"Screenshot {{ i + 1 }}\"\n        />\n      </div>\n    </mat-tab>\n    <mat-tab label=\"Trailers\" *ngIf=\"game.trailers?.length\">\n      <video\n        class=\"game-trailer\"\n        controls\n        *ngFor=\"let trailer of game.trailers; let i = index\"\n      >\n        <source src=\"{{ trailer.data?.max }}\" type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Game } from 'src/app/models';\n\n@Component({\n  selector: 'app-game-tabs',\n  templateUrl: './game-tabs.component.html',\n  styleUrls: ['./game-tabs.component.scss'],\n})\nexport class GameTabsComponent implements OnInit {\n  @Input() game: Game;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<app-search-bar></app-search-bar> <router-outlet></router-outlet>\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HttpHeadersInterceptor implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    req = req.clone({\r\n      setHeaders: {\r\n        'x-rapidapi-key': 'eb91de7796msh287afe5e22c5924p179680jsnd6db985dbe31',\r\n        'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com',\r\n      },\r\n      setParams: {\r\n        key: '0493d6d13e724471b1e8cd6ce6cf2842',\r\n      },\r\n    });\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { GaugeModule } from 'angular-gauge';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HttpErrorsInterceptor } from './interceptors/http-errors.interceptors';\nimport { HttpHeadersInterceptor } from './interceptors/http-headers.interceptors';\nimport { DetailsComponent } from './components/details/details.component';\nimport { GameTabsComponent } from './components/game-tabs/game-tabs.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchBarComponent,\n    HomeComponent,\n    DetailsComponent,\n    GameTabsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    GaugeModule.forRoot(),\n    MatTabsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatSelectModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpHeadersInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorsInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.scss']\n})\nexport class SearchBarComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form: NgForm) {\n    this.router.navigate(['search', form.value.search])\n  }\n\n}\n","<div class=\"search-container\">\n  <form\n    action=\"\"\n    class=\"search-form\"\n    #form=\"ngForm\"\n    (ngSubmit)=\"onSubmit(form)\"\n  >\n    <span class=\"logo\" routerLink=\"/\">NgVGDB</span>\n    <input\n      type=\"text\"\n      class=\"search-input\"\n      name=\"search\"\n      ngModel\n      placeholder=\"Search 500,000+ games\"\n    />\n    <button class=\"search-button\">Search</button>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DetailsComponent } from './components/details/details.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'search/:game-search',\n    component: HomeComponent,\n  },\n  {\n    path: 'details/:id',\n    component: DetailsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}